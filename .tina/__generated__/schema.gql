# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
interface Node {
  id: ID!
}

interface Document {
  sys: SystemInfo
  id: ID!
}

interface FormField {
  label: String
  name: String
  component: String
}

"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

""""""
scalar JSONObject

type SystemInfo {
  filename: String
  basename: String
  breadcrumbs(excludeExtension: Boolean): [String]
  path: String
  relativePath: String
  extension: String
  template: String
  collection: Section
}

type Section {
  type: String
  path: String
  label: String
  create: String
  match: String
  new_doc_ext: String
  templates: [String]
  slug: String
  documents: [Document]
}

union SectionDocumentUnion = Hero_Document

input SectionParams {
  hero: Hero_Input
}

type Mutation {
  addPendingDocument(relativePath: String, collection: String, template: String): Document
  updateDocument(relativePath: String, params: SectionParams): SectionDocumentUnion
  updateHeroDocument(relativePath: String, params: Hero_Input): Hero_Document
}

type Query {
  node(id: ID!): Node
  getDocument(collection: String, relativePath: String): SectionDocumentUnion
  getCollections: [Section]
  getCollection(collection: String): Section
  getHeroDocument(relativePath: String): Hero_Document
  getHeroList: [Hero_Document]
}

union Hero_Data = Hero_Doc_Data

input Hero_Input {
  hero: Hero_Doc_Input
}

union Hero_Values = Hero_Doc_Values

union Hero_Form = Hero_Doc_Form

type Hero_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Hero_Data
  values: Hero_Values
  form: Hero_Form
}

type Hero_Doc_Data {
  hero: String
  sub_hero: String
  _body: String
}

type Hero_Doc_Values {
  hero: String
  sub_hero: String
  _body: String
  _template: String
}

type TextField implements FormField {
  name: String
  label: String
  component: String
}

type TextareaField implements FormField {
  name: String
  label: String
  component: String
}

union Hero_Doc_FormFieldsUnion = TextField | TextareaField

type Hero_Doc_Form {
  label: String
  name: String
  fields: [Hero_Doc_FormFieldsUnion]
}

input Hero_Doc_Input {
  hero: String
  sub_hero: String
  _body: String
}

  