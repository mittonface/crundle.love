# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
interface Node {
  id: ID!
}

interface Document {
  sys: SystemInfo
  id: ID!
}

interface FormField {
  label: String
  name: String
  component: String
}

"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

""""""
scalar JSONObject

type SystemInfo {
  filename: String
  basename: String
  breadcrumbs(excludeExtension: Boolean): [String]
  path: String
  relativePath: String
  extension: String
  template: String
  collection: Section
}

type Section {
  type: String
  path: String
  label: String
  create: String
  match: String
  new_doc_ext: String
  templates: [String]
  slug: String
  documents: [Document]
}

union SectionDocumentUnion = Hero_Document | Date_Document | Timeline_Document

input SectionParams {
  hero: Hero_Input
  date: Date_Input
  timeline: Timeline_Input
}

type Mutation {
  addPendingDocument(relativePath: String, collection: String, template: String): Document
  updateDocument(relativePath: String, params: SectionParams): SectionDocumentUnion
  updateHeroDocument(relativePath: String, params: Hero_Input): Hero_Document
  updateDateDocument(relativePath: String, params: Date_Input): Date_Document
  updateTimelineDocument(relativePath: String, params: Timeline_Input): Timeline_Document
}

type Query {
  node(id: ID!): Node
  getDocument(collection: String, relativePath: String): SectionDocumentUnion
  getCollections: [Section]
  getCollection(collection: String): Section
  getHeroDocument(relativePath: String): Hero_Document
  getHeroList: [Hero_Document]
  getDateDocument(relativePath: String): Date_Document
  getDateList: [Date_Document]
  getTimelineDocument(relativePath: String): Timeline_Document
  getTimelineList: [Timeline_Document]
}

union Hero_Data = Hero_Doc_Data

input Hero_Input {
  hero: Hero_Doc_Input
}

union Hero_Values = Hero_Doc_Values

union Hero_Form = Hero_Doc_Form

type Hero_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Hero_Data
  values: Hero_Values
  form: Hero_Form
}

type Hero_Doc_Data {
  hero: String
  sub_hero: String
  _body: String
}

type Hero_Doc_Values {
  hero: String
  sub_hero: String
  _body: String
  _template: String
}

type TextField implements FormField {
  name: String
  label: String
  component: String
}

type TextareaField implements FormField {
  name: String
  label: String
  component: String
}

union Hero_Doc_FormFieldsUnion = TextField | TextareaField

type Hero_Doc_Form {
  label: String
  name: String
  fields: [Hero_Doc_FormFieldsUnion]
}

input Hero_Doc_Input {
  hero: String
  sub_hero: String
  _body: String
}

union Date_Data = Date_Doc_Data

input Date_Input {
  date: Date_Doc_Input
}

union Date_Values = Date_Doc_Values

union Date_Form = Date_Doc_Form

type Date_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Date_Data
  values: Date_Values
  form: Date_Form
}

type Date_Doc_Data {
  heading: String
  date_text: String
  sub_heading: String
  _body: String
}

type Date_Doc_Values {
  heading: String
  date_text: String
  sub_heading: String
  _body: String
  _template: String
}

union Date_Doc_FormFieldsUnion = TextField | TextareaField

type Date_Doc_Form {
  label: String
  name: String
  fields: [Date_Doc_FormFieldsUnion]
}

input Date_Doc_Input {
  heading: String
  date_text: String
  sub_heading: String
  _body: String
}

union Timeline_Data = Timeline_Doc_Data

input Timeline_Input {
  timeline: Timeline_Doc_Input
}

union Timeline_Values = Timeline_Doc_Values

union Timeline_Form = Timeline_Doc_Form

type Timeline_Document implements Node & Document {
  id: ID!
  sys: SystemInfo
  data: Timeline_Data
  values: Timeline_Values
  form: Timeline_Form
}

type Timeline_Timeline_Data {
  description: String
  date: String
}

type Timeline_Doc_Data {
  timeline: [Timeline_Timeline_Data]
  _body: String
}

type Timeline_Timeline_Values {
  description: String
  date: String
}

type Timeline_Doc_Values {
  timeline: [Timeline_Timeline_Values]
  _body: String
  _template: String
}

type DatetimeField implements FormField {
  name: String
  label: String
  component: String
  dateFormat: String
  timeFormat: String
}

union Timeline_Timeline_FormFieldsUnion = TextField | DatetimeField

type Timeline_Timeline_GroupListField implements FormField {
  name: String
  label: String
  component: String
  fields: [Timeline_Timeline_FormFieldsUnion]
}

union Timeline_Doc_FormFieldsUnion = Timeline_Timeline_GroupListField | TextareaField

type Timeline_Doc_Form {
  label: String
  name: String
  fields: [Timeline_Doc_FormFieldsUnion]
}

input Timeline_Timeline_Input {
  description: String
  date: String
}

input Timeline_Doc_Input {
  timeline: [Timeline_Timeline_Input]
  _body: String
}

  